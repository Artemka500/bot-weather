import telebot
import requests

from bs4 import BeautifulSoup as BS
from bot.data import config
from bot.handlers import user_start
from bot.services import weather
from bot.markups import inline_markups


bot = telebot.TeleBot(config.API_TOKEN_BOT)

city = ['–ú–æ—Å–∫–≤–∞', '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥', '–Ø—Ä–æ—Å–ª–∞–≤–ª—å', '–ü–∏—Ç–µ—Ä', '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫', '–°–æ—á–∏', '–î–æ–º–æ–¥–µ–¥–æ–≤–æ']


@bot.message_handler(commands=['start'])
def start(message):
    user_start.start_func(message, city)


@bot.message_handler(commands=['help'])
def start(message):
    user_start.help_func(message)


@bot.callback_query_handler(func=lambda call: True)
def callback_function(call):
    if call.data:
        for get in city:
            if call.data == f'weather:{get}':
                t_min = weather.get_weather_t_min(get)
                t_max = weather.get_weather_t_max(get)
                description = weather.get_weather_description(get)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f'‚õÖ <b>–í–æ—Ç —á—Ç–æ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:</b>\n\nüå¶ –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ <b>{get}:</b>\n\nü•µ <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {t_max}\nü•∂ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É:</b> {t_min}\n\n<i>üåò {description}</i>', parse_mode='html', reply_markup=inline_markups.back())
        if call.data == 'weather:back':
            user_start.start_func_edit(call.message, city)
        if call.data == 'weather:end':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f'‚õÖ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞:', parse_mode='html', reply_markup=inline_markups.back())
            bot.register_next_step_handler(call.message, input_city)
def input_city(message):
    city = message.text

    t_min = weather.get_weather_t_min(city)
    t_max = weather.get_weather_t_max(city)
    description = weather.get_weather_description(city)
    if t_min == None:
        bot.send_message(chat_id=message.chat.id, text=f'üòî <b>–î–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤–∞—à –∑–∞–ø—Ä–æ—Å:</b>\n<i>1. –í –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ\n2. –ì–æ—Ä–æ–¥ —Ä–µ–∞–ª–µ–Ω</i>', parse_mode='html', reply_markup=inline_markups.back())
    else:
        bot.send_message(chat_id=message.chat.id, text=f'‚õÖ <b>–í–æ—Ç —á—Ç–æ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:</b>\n\nüå¶ –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ <b>{city}:</b>\n\nü•µ <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {t_max}\nü•∂ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É:</b> {t_min}\n\n<i>üåò {description}</i>', parse_mode='html', reply_markup=inline_markups.back())


@bot.message_handler(content_types=['text', 'audio', 'photo', 'file'])
def handler(message):
    bot.send_message(message.chat.id, f'‚õÖ <b>–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é</b>\n\n<i>–ù–∞–ø–∏—à–∏—Ç–µ</i> <code>/help</code>', parse_mode='html', reply_markup=inline_markups.back())


if __name__ == '__main__':
    bot.polling(none_stop=True)